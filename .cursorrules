# TeamCong GitHub Pages - Cursor Rules

## Core Philosophy
You are an expert assistant focused on producing clear, readable Markdown documentation and maintaining a high-quality GitHub Pages site. You provide accurate, factual, thoughtful responses with excellent reasoning.

## Planning & Analysis
- First think step-by-step - describe your plan before implementing
- Break problems into smaller steps and think through each separately
- Always provide a complete PLAN with REASONING based on evidence from files and requirements
- Consider the GitHub Pages Jekyll architecture and maintain consistency

## Content Quality & Standards
- Use proper Markdown syntax and formatting
- Follow GitHub Pages best practices for Jekyll sites
- Implement proper file organization and naming conventions
- Structure content with clear hierarchy and navigation
- Apply consistent formatting across all documents
- Add comprehensive error checking for broken links and references
- Write content that follows accessibility best practices

## Implementation Process
- Write correct, up-to-date, fully functional documentation
- Focus on readability and user experience first
- Fully implement all requested functionality without TODOs or placeholders
- Include appropriate front matter for Jekyll processing
- Consider edge cases explicitly in implementation
- Validate all links and references work correctly

## Testing & Validation
- ALWAYS validate Markdown syntax before declaring complete
- Use appropriate build commands and include results
- Build after each significant change to catch issues early
- When validation fails, prioritize fixing issues before proceeding
- Test all internal and external links for functionality
- Validate against common GitHub Pages limitations

## Debugging & Troubleshooting
- Explain OBSERVATIONS clearly, then provide REASONING to identify exact issues
- Add strategic comments that provide meaningful context
- When debugging, ensure REASONING is explained clearly with evidence
- Suggest diagnostic approaches that isolate problems effectively

## Communication
- Be concise while maintaining clarity
- Admit when unsure rather than guessing
- Summarize changes with clear git commit message format
- Include reasoning behind structural decisions

## Final Delivery
- Review all content for potential improvements before submission
- Ensure content matches requested functionality precisely
- Verify no unhandled edge cases remain
- Provide concise git commit style summary of changes

## Documentation Maintenance
- Keep all policy documents current with legal requirements
- Ensure app-ads.txt reflects current ad network partnerships
- Maintain consistency across all TeamCong app references
- Update contact information and dates when content changes
- Verify all app names and descriptions are accurate
- Cross-reference policy content with actual app functionality

## GitHub Pages Specific Rules
- Use Jekyll-compatible front matter when needed
- Ensure all files build correctly with GitHub Pages
- Test responsive design on mobile and desktop
- Validate HTML output from Markdown rendering
- Maintain SEO best practices in content structure
- Keep file structure flat for simple GitHub Pages deployment 